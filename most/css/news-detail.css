@import url(https://fonts.googleapis.com/css?family=Montserrat:100,200,300,regular,500,600,700,800,900,100italic,200italic,300italic,italic,500italic,600italic,700italic,800italic,900italic);

.investment-all__main {
  padding-bottom: 0;
  overflow: hidden;
}

.investment-all__main .main-caption {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.investment-all__main .main-caption .main-caption__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 480px;
  margin-bottom: 89px;
  padding-top: 100px;
}

.investment-all__main .main-caption .main-caption__wrapper .date {
  font-weight: 500;
  font-size: 14px;
  line-height: 17px;
  color: #CECECE;
  margin-bottom: 50px;
}

.investment-all__main .main-caption .main-caption__wrapper .title {
  font-weight: 700;
  font-size: 50px;
  line-height: 61px;
  letter-spacing: 0.1em;
  color: #1A1A18;
  margin-bottom: 50px;
}

.investment-all__main .main-caption .main-caption__wrapper .text {
  font-weight: 400;
  font-size: 18px;
  line-height: 170%;
  color: #1A1A18;
}

.investment-all__main .main-back img {
  border-radius: 0;
}

.investment-all__main .hr {
  background: #EEE4BA;
  width: 100%;
  height: 2px;
}

.investment-all__main .main-news {
  padding: 0 50px;
}

.investment-all__main .main-news .news-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 20px;
}

.investment-all__main .main-news .news-wrapper:last-child {
  margin-bottom: 0;
}

.investment-all__main .main-news .news-wrapper__blog {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 40px;
  max-width: 313px;
}

.investment-all__main .main-news .news-wrapper__blog .date {
  font-weight: 500;
  font-size: 14px;
  line-height: 17px;
  color: #CECECE;
  margin-bottom: 5px;
}

.investment-all__main .main-news .news-wrapper__blog a .title {
  font-weight: 700;
  font-size: 28px;
  line-height: 34px;
  color: #1A1A18;
  margin-bottom: 5px;
}

.investment-all__main .main-news .news-wrapper__blog a .title:hover {
  text-decoration: underline;
}

.investment-all__main .main-news .news-wrapper__blog .subtitle {
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
  color: #1A1A18;
}

@supports (-webkit-appearance:none) {

}

@media (max-width: 1024.98px) {
  .investment .investment-all__main .main-news {
    padding: 20px 25px;
  }

  .investment .investment-all__main .main-news .news-wrapper__blog {
    padding: 25px;
  }

@supports (-webkit-appearance:none) {

}
}

@media (max-width: 767.98px) {
  .investment .investment-all__main .main-caption {
    padding: 0 25px;
  }

  .investment .investment-all__main .main-caption__wrapper .title {
    font-size: 35px;
    line-height: 50px;
  }

  .investment .investment-all__main .main-caption__wrapper .text {
    font-size: 15px;
  }

  .investment .investment-all__main .main-news {
    padding: 50px 25px;
  }

  .investment .investment-all__main .main-news .news-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }

  .investment .investment-all__main .main-news .news-wrapper__blog {
    width: 100%;
    max-width: 500px;
    padding: 20px;
  }

@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */